package travelmaster.model;

import jakarta.persistence.*;
import travelmaster.pojo.User;

import java.time.LocalDateTime;
import com.fasterxml.jackson.annotation.JsonIgnore;

@Entity
@Table(name = "expenses")
public class Expense {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long expenseId;

    @ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.PERSIST, CascadeType.MERGE})
    @JoinColumn(name = "user_id", nullable = false)
    @JsonIgnore
    private User user;

    private Double amount;

    @Column(length = 100)
    private String category;

    @Column(length = 255)
    private String description;

    private LocalDateTime date;

    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    public Expense() {
        // Default constructor
    }


    
    
    
    @Column(name = "user_id", insertable = false, updatable = false)
    private Long userId;

    public Long getUserId() {
        return userId;
    }
    
    
    
    
    

    public Expense(Long expenseId, User user, Double amount, String category, String description,
			LocalDateTime date, LocalDateTime createdAt, LocalDateTime updatedAt) {
		super();
		this.expenseId = expenseId;
		this.user = user;
		this.amount = amount;
		this.category = category;
		this.description = description;
		this.date = date;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}



	// Getters and Setters

    
    @PrePersist
    protected void onCreate() {
        this.createdAt = LocalDateTime.now();
    }

    public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	public Double getAmount() {
		return amount;
	}

	public void setAmount(Double amount) {
		this.amount = amount;
	}

	public String getCategory() {
		return category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public LocalDateTime getDate() {
		return date;
	}

	public void setDate(LocalDateTime date) {
		this.date = date;
	}

	public LocalDateTime getCreatedAt() {
		return createdAt;
	}

	public void setCreatedAt(LocalDateTime createdAt) {
		this.createdAt = createdAt;
	}

	@PreUpdate
    protected void onUpdate() {
        this.updatedAt = LocalDateTime.now();
    }

	public void setUserId(Long userId) {
		// TODO Auto-generated method stub
		
	}



	public Long getExpenseId() {
		// TODO Auto-generated method stub
		return expenseId;
	}
}
