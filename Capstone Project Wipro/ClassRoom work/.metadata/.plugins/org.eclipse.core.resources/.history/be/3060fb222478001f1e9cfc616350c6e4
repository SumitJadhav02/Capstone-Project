package travelmaster.model;

import jakarta.persistence.*;
import java.time.LocalDateTime;

@Entity
@Table(name = "bookings")
public class Booking {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "booking_id")
    private Long bookingId;

    @ManyToOne
    @JoinColumn(name = "user_id", nullable = false)
    private User user;

    @ManyToOne
    @JoinColumn(name = "flight_id", nullable = true)
    private Flight flight;

    @ManyToOne
    @JoinColumn(name = "hotel_id", nullable = true)
    private Hotel hotel;

    @ManyToOne
    @JoinColumn(name = "itinerary_id", nullable = false) // Reference to the itinerary
    private Itinerary itinerary; // Add this line to reference the itinerary

    @Column(name = "booking_date", nullable = false)
    private LocalDateTime bookingDate;

    @Column(name = "status", nullable = false)
    private String status;

    @Column(name = "created_at", nullable = false, updatable = false)
    private LocalDateTime createdAt;

    @Column(name = "updated_at", nullable = false)
    private LocalDateTime updatedAt;

    // Constructors
    public Booking() {}

    public Booking(User user, Flight flight, Hotel hotel, Itinerary itinerary, LocalDateTime bookingDate, String status) { // Include itinerary in constructor
        this.user = user;
        this.flight = flight;
        this.hotel = hotel;
        this.itinerary = itinerary; // Set the itinerary
        this.bookingDate = bookingDate;
        this.status = status;
    }

    // Getters and Setters
    // (Omitted for brevity; keep your existing ones)

    // Pre-persist and pre-update methods
    @PrePersist
    protected void onCreate() {
        this.createdAt = LocalDateTime.now();
        this.updatedAt = LocalDateTime.now();
    }

    @PreUpdate
    protected void onUpdate() {
        this.updatedAt = LocalDateTime.now();
    }
}
